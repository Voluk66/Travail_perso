pipeline {
    agent any

  tools {
        nodejs 'node18'
  }

  environment {
        PATH = "${env.WORKSPACE}/node_modules/.bin:${env.PATH}"
    IMAGE_NAME = 'dooz-tcg-frontend'
    REGISTRY = '192.168.1.21:5000'
    IMAGE_TAG = 'dev'
  }

  stages {
        stage('Install') {
            steps {
                sh 'npm ci'
      }
    }

    stage('Build') {
            steps {
                sh 'npm run build'
      }
    }

    stage('Analyse Sonar') {
            when {
                branch 'develop'
            }
            steps {
                echo "üîç Analyse statique avec SonarQube (TypeScript)"
                withSonarQubeEnv('Sonar') {
                    sh 'npx sonar-scanner'
                }
            }
        }

    stage('Docker build') {
            when {
                branch 'develop'
      }
      steps {
                echo "üê≥ Construction de l'image Docker"
        sh '''
          docker build -t $IMAGE_NAME:$IMAGE_TAG .
        '''
      }
    }

    stage('Push to registry') {
            when {
                branch 'develop'
        }
        steps {
                echo "üì§ Push de l‚Äôimage vers le registry local"

            sh '''
                docker tag $IMAGE_NAME:$IMAGE_TAG localhost:5000/$IMAGE_NAME:$IMAGE_TAG
                docker push localhost:5000/$IMAGE_NAME:$IMAGE_TAG
            '''
        }
    }

    stage('Deploy latest image') {
            when{ branch 'develop' }
        steps {
                sh """
                docker container stop $IMAGE_NAME || true
                docker container rm $IMAGE_NAME || true
                docker pull $REGISTRY/$IMAGE_NAME:$IMAGE_TAG
                docker run -d \
                    --restart unless-stopped \
                    --name $IMAGE_NAME \
                    --network traefik \
                    -l traefik.enable=true \
                    -l 'traefik.http.routers.react.rule=Host(\"app.local\")' \
                    -l traefik.http.routers.react.entrypoints=web \
                    -l traefik.http.services.react.loadbalancer.server.port=80 \
                    -p 3000:80 \
                    $REGISTRY/$IMAGE_NAME:$IMAGE_TAG
            """
        }
    }
  }
}
